# HOW TO CHOOSE YOUR BEST SUITED DATABASE BASED ON THEIR FEAUTURES?
#
# WORKLOADS:
#    1. OLTP. High Performance into individual writting and readings
#    2. OLAP. High Performance into computing aggregates or data analysis
# OPERATOR MODEL: how the query operator gets propagated. (aka Processing model)
#    1. (P)ipeline model. Propagates one tuple at a time.
#    2. (M)aterialization model. Propagates all tables at once.
#    3. (B)atch model. Propagate a batch of tuples at a time.
#
# STORAGE MODEL:
#    1. (N)ormalized (S)torage (M)odel. Many minimal related tables
#    2. (D)ormalized (S)torage (M)odel. Store redundancies in an easy access big table
# ACCESS METHODS: how tuples are readen from disk
#    1. (S)EQUENTIAL (S)CAN
#        OPTIMIZATIONS:
#        1. (P)refetching. Fetching pages from disk ahead of time
#        2. (B)uffer (P)ool (B)ypass. Temporal Buffer pool page
#        3. (P)arallelization
#        4. (Z)one (M)aps. Precomputed aggregates per page.
#        5. (H)eap (C)lustering
#        6. (L)ate (M)aterialization
#    2. (I)ndex (S)can
#    3. (M)ulti (I)ndex (S)can
# PROCESS MODEL: How processes are run concurrently
#    1. (P)rocess per (W)orker. process one worker at a time.
#    2. (P)rocess (P)ool. we have a bunch of processes waiting in a pool, when a client arrives you can attach any free worker in the pool.
#    3. (T)hread per (W)orker. Instead of processes, a single thread per worker
# ISOLATION LEVELS: correctness vs performance with anomalies
#    1. (S)erializable, correctness guarantee
#    2. (S)napshot (I)solation,
#    3. (R)epeatable (R)eads, no dirty reads, no unrepeatable reads, phantom possible
#    4. (R)ead (C)ommited, no dirty reads, repeatable reads problem, phantom problem
#    5. (R)ead (U)ncomitted, dirty reads, repeatable reads, phantom problem.
# MVCC: Multi-version concurrency control
#    1. PROTOCOL
#       1. MV-2PL
#       2. MV-TO
#       3. MV-OCC
#    2. VERSION STORAGE
#       1. DELTA
#       2. APPEND ONLY
#       3. TIME-TRAVEL
#    3. GARBAGE COLLECTION
#       1. VACUUM
#       2. COOPERATIVE
#       3. HYBRID
#       4. TXN-LEVEL
#    4. INDEXES
#       1. LOGICAL
#       2. PHYSICAL
# LICENCE:
#    1. (O)pen Source
#    2. (C)ompercial
# ARCHITECTURE: 
#    1. (S)hare (E)verything
#    2. (S)hare (M)emory
#    3. (S)hare (D)isk
#    4. (S)hare (N)othing
# SYNTAX: customized sytax for each system


# Alphabetical ordered by name

ACTIAN INGRES:
  ISOLATION LEVEL: 
    - DEFAULT: (S)erializable
    - MAXIMUM: (S)erializable

AEROSPIKE:
  ISOLATION LEVEL: 
    - DEFAULT: (R)ead (C)ommited
    - MAXIMUM: (R)ead (C)ommited

Amazon REDSHIFT:
  - OPERATOR_MODEL: (B)atch
  - ACCESS_METHOD: 
    - SECUENTIAL_SCAN: (Z)one (M)aps
  - ARCHITECTURE: (S)hare (D)isk
  
Amazon AURORA:
  - ARCHITECTURE: (S)hare (D)isk

Cloudera Impala:
  - QUERY: SQL
  - OPERATOR_MODEL: (P)ipeline
  - ACCESS_METHOD: 
    - SECUENTIAL_SCAN: (Z)one (M)aps
  - ARCHITECTURE: (S)hare (D)isk
  
DuckDB:
  - OPERATOR_MODEL: (B)atch

Greenplum:
  - OPERATOR_MODEL: (P)ipeline
  ISOLATION LEVEL: 
    - DEFAULT: (R)ead (C)ommited
    - MAXIMUM: (R)ead (C)ommited

HBASE:
  - ARCHITECTURE: (S)hare (D)isk
  
HECKATON:
  - MVCC:
    - PROTOCOL: MV-OCC
    - VERSION STORAGE: APPEND ONLY
    - GARBAGE COLLECTION: COOPERATIVE
    - INDEXES: PHYSICAL

HYPER:
  - MVCC:
    - PROTOCOL: MV-OCC
    - VERSION STORAGE: DELTA
    - GARBAGE COLLECTION: TXN LEVEL
    - INDEXES: LOGICAL
    
HYRISE:
  - OPERATOR_MODEL: (B)atch
  - MVCC:
    - PROTOCOL: MV-OCC
    - VERSION STORAGE: APPEND ONLY
    - GARBAGE COLLECTION: None
    - INDEXES: PHYSICAL

IBM DB2:
  - QUERY: SQL
  - OPERATOR_MODEL: (P)ipeline / (B)atch
  - ACCESS_METHOD: 
    - SECUENTIAL_SCAN: (Z)one (M)aps
  - PROCESS_MODEL: 
    - (P)rocess per (W)orker
    - (P)rocess (P)ool
    - (T)hread per (W)orker
  - LICENCE: (C)omercial
  - SYNTAX:
    - RUNSTATS: update internal statistics
    
MEMSQL:
  - QUERY: SQL
  - MAIN_STORAGE: (M)emory
  - ACCESS_METHOD: 
    - SECUENTIAL_SCAN: (Z)one (M)aps
  - ISOLATION LEVEL: 
    - DEFAULT: (R)ead (C)ommited
    - MAXIMUM: (R)ead (C)ommited
  - MVCC:
    - PROTOCOL: MV-OCC
    - VERSION STORAGE: APPEND ONLY
    - GARBAGE COLLECTION: VACUUM
    - INDEXES: PHYSICAL
    
monetdb:
  - OPERATOR_MODEL: (M)aterialization
  - STORAGE_MODEL: (DSM) (column store)

MongoDB:
  - QUERY: NoSQL
  - TYPE:  Documents
  - MAIN_STORAGE: (D)isk
  - OPERATOR_MODEL: (P)ipeline

MySQL:
  - QUERY: SQL
  - MAIN_STORAGE: (D)isk
  - OPERATOR_MODEL: (P)ipeline
  - PROCESS_MODEL: 
    - (P)rocess per (W)orker
    - (P)rocess (P)ool
    - (T)hread per (W)orker
  - SYNTAX:
    - ANALYZE TABLE: update internal statistics
  - ISOLATION LEVEL: 
    - DEFAULT: (R)epeatable (R)eads
    - MAXIMUM: (S)erializable
  - MVCC:
    - PROTOCOL: MV-2PL
    - VERSION STORAGE: DELTA
    - GARBAGE COLLECTION: VACUUM
    - INDEXES: LOGICAL
    
NETEZZA:
  - ACCESS_METHOD: 
    - SECUENTIAL_SCAN: (Z)one (M)aps

noise page:
  - OPERATOR_MODEL: (B)atch
  - MVCC:
    - PROTOCOL: MV-OCC
    - VERSION STORAGE: DELTA
    - GARBAGE COLLECTION: TXN LEVEL
    - INDEXES: LOGICAL
NuoDB:
  - QUERY: SQL
  - MAIN_STORAGE: (D)isk / (M)emory / (C)loud
  - OPERATOR_MODEL: (P)ipeline
  - MVCC:
    - PROTOCOL: MV-2PL
    - VERSION STORAGE: APPEND ONLY
    - GARBAGE COLLECTION: VACUUM
    - INDEXES: LOGICAL
  - ARCHITECTURE: (S)hare (D)isk  
  
ORACLE:
  - OPERATOR_MODEL: (P)ipeline / (B)atch
  - ACCESS_METHOD: 
    - SECUENTIAL_SCAN: (Z)one (M)aps
  - PROCESS_MODEL: 
    - (P)rocess per (W)orker
    - (T)hread per (W)orker
  - SYNTAX:
    - ANALYZE TABLE: update internal statistics
  - ISOLATION LEVEL: 
    - DEFAULT: (R)ead (C)ommited
    - MAXIMUM: (S)napshot (I)solation
  - MVCC:
    - PROTOCOL: MV-2PL
    - VERSION STORAGE: DELTA
    - GARBAGE COLLECTION: VACUUM
    - INDEXES: LOGICAL

ORACLE EXADATA:
  - ARCHITECTURE: (S)hare (D)isk

ORACLE RAC:
  - ARCHITECTURE: (S)hare (D)isk
  
PostgreSQL:
  - QUERY: SQL
  - MAIN_STORAGE: (D)isk
  - OPERATOR_MODEL: (P)ipeline
  - PROCESS_MODEL: 
    - (P)rocess per (W)orker
    - (P)rocess (P)ool
  - LICENCE:
    - (O)pen Source
  - SYNTAX:
    - ANALYZE: update internal statistics
  - ISOLATION LEVEL: 
    - DEFAULT: (R)ead (C)ommited
    - MAXIMUM: (S)erializable
  - MVCC:
    - PROTOCOL: MV-2PL / MV-TO
    - VERSION STORAGE: APPEND ONLY
    - GARBAGE COLLECTION: VACUUM
    - INDEXES: PHYSICAL
        
PRESTO:
  - OPERATOR_MODEL: (B)atch
  - ARCHITECTURE: (S)hare (D)isk
  
REDIS:
  - QUERY: SQL
  - MAIN_STORAGE: (M)emory

ROCKSET:
  - ARCHITECTURE: (S)hare (D)isk

SAP HANA:
  - ISOLATION LEVEL: 
    - DEFAULT: (R)ead (C)ommited
    - MAXIMUM: (S)erializable
  - MVCC:
    - PROTOCOL: MV-2PL
    - VERSION STORAGE: TIME-TRAVEL
    - GARBAGE COLLECTION: HYBRID
    - INDEXES: LOGICAL
    
ScaleDB:
  - ISOLATION LEVEL: 
    - DEFAULT: (R)ead (C)ommited
    - MAXIMUM: (R)ead (C)ommited

SNOWFLAKE:
  - OPERATOR_MODEL: (B)atch
  - ARCHITECTURE: (S)hare (D)isk
  
SQLite:
  - QUERY: SQL
  - MAIN_STORAGE: (D)ISK
  - OPERATOR_MODEL: (P)ipeline
  - SYNTAX:
    - ANALYZE: update internal statistics
  
SQLServer:
  - OPERATOR_MODEL: (P)ipeline / (B)atch
  - ACCESS_METHOD: 
    - SECUENTIAL_SCAN: (Z)one (M)aps
  - PROCESS_MODEL: 
    - (T)hread per (W)orker
  - SYNTAX:
    - UPDATE STATISTICS: update internal statistics
  ISOLATION LEVEL: 
    - DEFAULT: (R)ead (C)ommited
    - MAXIMUM: (S)erializable

sqrrl:
  - ARCHITECTURE: (S)hare (D)isk

SPANNER:
  - ARCHITECTURE: (S)hare (D)isk
  
splice machine:
  - ARCHITECTURE: (S)hare (D)isk  

Stinger:
  - ARCHITECTURE: (S)hare (D)isk
  
TERRADATA:
  - PROCESS_MODEL: 
    - (T)hread per (W)orker

VERTICA:
  - OPERATOR_MODEL: (P)ipeline
  - ACCESS_METHOD: 
    - SECUENTIAL_SCAN: (Z)one (M)aps
VECTOR WISE:
  - OPERATOR_MODEL: (B)atch

VoltDB:
  - MAIN_STORAGE: (M)emory
  - OPERATOR_MODEL: (M)aterialization
  ISOLATION LEVEL: 
    - DEFAULT: (S)erializable
    - MAXIMUM: (S)erializable

YugaByte:
  - ARCHITECTURE: (S)hare (D)isk
  
/*
- MAIN_STORAGE o - STORAGE_MANAGER? 
*/

/*
# RELATIONAL DATABASES SUMMARY
|     DB          | MySQL | PostgreSQL | SQLite | REDIS | MEMSQL | NUODB | 
| --------------- | ----- | ---------- | ------ | ----- | ------ | ----- |
| (D)isk/(M)emory |   D   |    D       |   D    |   M   |   M    |  D/M  |
| (I)TERATOR      |   I   |    I       |   I    |       |        |   I   |


# NON-RELATIONAL DATABASES SUMMARY
|      DB         | MongoDB |
| --------------- | ------- |
|    Type         |   doc   |
| (D)isk/(M)emory |    D    |
| (I)TERATOR      |    I    |
*/
